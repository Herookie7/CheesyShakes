I want to create a EMployee management system which is capable of performing crud on users and take attendance of user and approve and reject leave request. User can apply for leave also and other user with certain role can accept and reject leave request

package com.herookie.employee.entities;import java.io.Serializable;import com.fasterxml.jackson.annotation.JsonIgnore;import com.fasterxml.jackson.annotation.JsonIgnoreProperties;import jakarta.persistence.Column;import jakarta.persistence.Entity;import jakarta.persistence.EnumType;import jakarta.persistence.Enumerated;import jakarta.persistence.FetchType;import jakarta.persistence.GeneratedValue;import jakarta.persistence.GenerationType;import jakarta.persistence.Id;import jakarta.persistence.JoinColumn;import jakarta.persistence.ManyToOne;import jakarta.persistence.Table;import jakarta.persistence.UniqueConstraint;import lombok.AllArgsConstructor;import lombok.Builder;import lombok.Data;import lombok.NoArgsConstructor;@Entity@Table(name="users",uniqueConstraints={@UniqueConstraint(columnNames="email")})@Data@Builder@NoArgsConstructor@AllArgsConstructorpublic class User{@Id@GeneratedValue(strategy=GenerationType.IDENTITY)private long userId;@Column(nullable=false)private String fullName;@Column(nullable=false,unique=true)private String email;@JsonIgnoreprivate String password;private String contactPhone;private String address;private String jobTitle;@Enumerated(EnumType.STRING)private Role role;}

package com.herookie.employee.entities;public enum Role{HR,employee,manager}

package com.herookie.employee.entities;public enum LeaveType{paid,unpaid,sick}

package com.herookie.employee.entities;public enum LeaveStatus{approved,rejected}

package com.herookie.employee.entities;import java.io.Serializable;import java.time.LocalDate;import java.time.LocalDateTime;import org.hibernate.annotations.CreationTimestamp;import org.springframework.format.annotation.DateTimeFormat;import com.fasterxml.jackson.annotation.JsonFormat;import jakarta.persistence.Column;import jakarta.persistence.Entity;import jakarta.persistence.EnumType;import jakarta.persistence.Enumerated;import jakarta.persistence.GeneratedValue;import jakarta.persistence.GenerationType;import jakarta.persistence.Id;import jakarta.persistence.JoinColumn;import jakarta.persistence.ManyToOne;import jakarta.persistence.Table;import lombok.AllArgsConstructor;import lombok.Builder;import lombok.Data;import lombok.NoArgsConstructor;@Entity@Table(name="leaves")@Data@Builder@NoArgsConstructor@AllArgsConstructorpublic class Leave{@Id @Column(name="leave_id")@GeneratedValue(strategy=GenerationType.IDENTITY)private Long leaveId;@ManyToOne @JoinColumn(name="user_id",nullable=false)private User user;@ManyToOne @JoinColumn(name="leave_type",nullable=false)@Enumerated(EnumType.STRING)private LeaveType leaveType;@Column(name="leave_reason",columnDefinition="TEXT",nullable=false)private String leaveReason;@JsonFormat(pattern="yyyy-MM-dd")@DateTimeFormat(iso=DateTimeFormat.ISO.DATE)@Column(name="from_date",nullable=false)private LocalDate fromDate;@JsonFormat(pattern="yyyy-MM-dd")@DateTimeFormat(iso=DateTimeFormat.ISO.DATE)@Column(name="to_date",nullable=false)private LocalDate toDate;@Column(name="denied_reason",columnDefinition="TEXT")private String deniedReason;@Column(name="status",nullable=false)@Enumerated(EnumType.STRING)private LeaveStatus status;@JsonFormat(pattern="yyyy-MM-dd HH:mm:ss")@Column(name="created_at",nullable=false)@CreationTimestamp private LocalDateTime createdAt;@ManyToOne @JoinColumn(name="reviewed_by")private User reviewedBy;}

package com.herookie.employee.entities;import java.io.Serializable;import java.util.Date;import jakarta.persistence.Entity;import jakarta.persistence.GeneratedValue;import jakarta.persistence.GenerationType;import jakarta.persistence.Id;import jakarta.persistence.JoinColumn;import jakarta.persistence.ManyToOne;import jakarta.persistence.Table;import jakarta.persistence.Temporal;import jakarta.persistence.TemporalType;import lombok.AllArgsConstructor;import lombok.Builder;import lombok.Data;import lombok.NoArgsConstructor;@Entity@Table(name="attendances")@Data@Builder@NoArgsConstructor@AllArgsConstructorpublic class Attendance{@Id@GeneratedValue(strategy=GenerationType.IDENTITY)private long attendanceId;@Temporal(TemporalType.TIMESTAMP)private Date checkIn;@Temporal(TemporalType.TIMESTAMP)private Date checkOut;private boolean hasCheckIn=false;private boolean hasCheckOut=false;@ManyToOne@JoinColumn(name="user_id")private User user;}

package com.herookie.employee.entities;import java.time.LocalDate;import java.time.LocalDateTime;import org.hibernate.annotations.CreationTimestamp;import com.fasterxml.jackson.annotation.JsonIgnore;import jakarta.persistence.Column;import jakarta.persistence.Entity;import jakarta.persistence.EnumType;import jakarta.persistence.Enumerated;import jakarta.persistence.FetchType;import jakarta.persistence.GeneratedValue;import jakarta.persistence.GenerationType;import jakarta.persistence.Id;import jakarta.persistence.JoinColumn;import jakarta.persistence.ManyToOne;import jakarta.persistence.Table;import lombok.AllArgsConstructor;import lombok.Builder;import lombok.Data;import lombok.NoArgsConstructor;@Entity@Table(name="leave_requests")@Data@Builder@NoArgsConstructor@AllArgsConstructorpublic class LeaveRequest{@Id @GeneratedValue(strategy=GenerationType.IDENTITY)private Long id;@ManyToOne @JoinColumn(name="user_id",nullable=false)private User user;@Enumerated(EnumType.STRING)private LeaveType leaveType;@Column(name="start_date",nullable=false)private LocalDate startDate;@Column(name="end_date",nullable=false)private LocalDate endDate;@Column(name="reason",columnDefinition="TEXT",nullable=false)private String reason;@Enumerated(EnumType.STRING)private LeaveStatus status;@JsonIgnore @ManyToOne(fetch=FetchType.LAZY)@JoinColumn(name="reviewed_by")private User reviewedBy;@CreationTimestamp @Column(name="created_at",nullable=false)private LocalDateTime createdAt;}